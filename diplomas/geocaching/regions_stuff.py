# -*- coding: utf-8 -*-
def regions_mapping(region):
    if region in ['Россия, Ямало-Ненецкий авт. окр.', 'Россия, Ханты-Мансийский авт. окр.', 'Россия, Тюменская обл.']:
        return 'Россия, Тюменская обл.'
    elif region in ['Россия, Ненецкий авт. окр.', 'Россия, Архангельская обл.']:
        return 'Россия, Архангельская обл.'
    else:
        return region


def get_region_neighbours(region):
    ########################################## ЦФО ##########################################
    if region == 'Россия, Белгородская обл.':
        return ['Россия, Воронежская обл.', 'Россия, Курская обл.']
    elif region == 'Россия, Брянская обл.':
        return ['Россия, Калужская обл.', 'Россия, Курская обл.', 'Россия, Орловская обл.', 'Россия, Смоленская обл.']
    elif region == 'Россия, Владимирская обл.':
        return ['Россия, Ивановская обл.', 'Россия, Московская обл.', 'Россия, Нижегородская обл.',
                'Россия, Рязанская обл.',
                'Россия, Ярославская обл.']
    elif region == 'Россия, Воронежская обл.':
        return ['Россия, Белгородская обл.', 'Россия, Волгоградская обл.', 'Россия, Курская обл.',
                'Россия, Липецкая обл.',
                'Россия, Ростовская обл.', 'Россия, Саратовская обл.', 'Россия, Тамбовская обл.']
    elif region == 'Россия, Ивановская обл.':
        return ['Россия, Владимирская обл.', 'Россия, Костромская обл.', 'Россия, Нижегородская обл.',
                'Россия, Ярославская обл.']
    elif region == 'Россия, Калужская обл.':
        return ['Россия, Брянская обл.', 'Россия, Московская обл.', 'Россия, Орловская обл.', 'Россия, Смоленская обл.',
                'Россия, Тульская обл.']
    elif region == 'Россия, Костромская обл.':
        return ['Россия, Вологодская обл.', 'Россия, Ивановская обл.', 'Россия, Кировская обл.',
                'Россия, Нижегородская обл.', 'Россия, Ярославская обл.']
    elif region == 'Россия, Курская обл.':
        return ['Россия, Белгородская обл.', 'Россия, Брянская обл.', 'Россия, Воронежская обл.',
                'Россия, Липецкая обл.',
                'Россия, Орловская обл.']
    elif region == 'Россия, Липецкая обл.':
        return ['Россия, Воронежская обл.', 'Россия, Курская обл.', 'Россия, Орловская обл.',
                'Россия, Рязанская обл.', 'Россия, Тамбовская обл.', 'Россия, Тульская обл.']
    elif region == 'Россия, Московская обл.':
        return ['Россия, Владимирская обл.', 'Россия, Калужская обл.', 'Россия, Рязанская обл.',
                'Россия, Смоленская обл.',
                'Россия, Тульская обл.', 'Россия, Тверская обл.', 'Россия, Ярославская обл.']
    elif region == 'Россия, Орловская обл.':
        return ['Россия, Брянская обл.', 'Россия, Калужская обл.', 'Россия, Курская обл.',
                'Россия, Липецкая обл.', 'Россия, Тульская обл.']
    elif region == 'Россия, Рязанская обл.':
        return ['Россия, Мордовия респ.', 'Россия, Владимирская обл.', 'Россия, Липецкая обл.',
                'Россия, Московская обл.', 'Россия, Тульская обл.',
                'Россия, Нижегородская обл.', 'Россия, Пензенская обл.', 'Россия, Тамбовская обл.', ]
    elif region == 'Россия, Смоленская обл.':
        return ['Россия, Брянская обл.', 'Россия, Калужская обл.', 'Россия, Московская обл.',
                'Россия, Псковская обл.', 'Россия, Тверская обл.']
    elif region == 'Россия, Тамбовская обл.':
        return ['Россия, Воронежская обл.', 'Россия, Липецкая обл.', 'Россия, Пензенская обл.',
                'Россия, Рязанская обл.', 'Россия, Саратовская обл.']
    elif region == 'Россия, Тверская обл.':
        return ['Россия, Вологодская обл.', 'Россия, Московская обл.', 'Россия, Новгородская обл.',
                'Россия, Псковская обл.', 'Россия, Смоленская обл.', 'Россия, Ярославская обл.', ]
    elif region == 'Россия, Тульская обл.':
        return ['Россия, Калужская обл.', 'Россия, Липецкая обл.', 'Россия, Московская обл.',
                'Россия, Орловская обл.', 'Россия, Рязанская обл.', ]
    elif region == 'Россия, Ярославская обл.':
        return ['Россия, Владимирская обл.', 'Россия, Вологодская обл.', 'Россия, Ивановская обл.',
                'Россия, Костромская обл.', 'Россия, Московская обл.', 'Россия, Тверская обл.']
    ########################################## СЗФО #####################################
    elif region == 'Россия, Карелия респ.':
        return ['Россия, Архангельская обл.', 'Россия, Вологодская обл.', 'Россия, Ленинградская обл.',
                'Россия, Мурманская обл.']
    elif region == 'Россия, Коми респ.':
        return ['Россия, Пермский край', 'Россия, Архангельская обл.',
                'Россия, Кировская обл.', 'Россия, Свердловская обл.', 'Россия, Тюменская обл.', ]
    elif region == 'Россия, Архангельская обл.':
        return ['Россия, Карелия респ.', 'Россия, Коми респ.', 'Россия, Вологодская обл.',
                'Россия, Кировская обл.', 'Россия, Тюменская обл.', ]
    elif region == 'Россия, Вологодская обл.':
        return ['Россия, Карелия респ.', 'Россия, Архангельская обл.', 'Россия, Кировская обл.',
                'Россия, Костромская обл.', 'Россия, Ленинградская обл.', 'Россия, Новгородская обл.',
                'Россия, Тверская обл.', 'Россия, Ярославская обл.', ]
    elif region == 'Россия, Калининградская обл.':
        return []
    elif region == 'Россия, Ленинградская обл.':
        return ['Россия, Карелия респ.', 'Россия, Вологодская обл.',
                'Россия, Новгородская обл.', 'Россия, Псковская обл.']
    elif region == 'Россия, Мурманская обл.':
        return ['Россия, Карелия респ.']
    elif region == 'Россия, Новгородская обл.':
        return ['Россия, Вологодская обл.', 'Россия, Ленинградская обл.', 'Россия, Псковская обл.',
                'Россия, Тверская обл.']
    elif region == 'Россия, Псковская обл.':
        return ['Россия, Ленинградская обл.', 'Россия, Новгородская обл.', 'Россия, Смоленская обл.',
                'Россия, Тверская обл.']
    ########################################## ПФО ##########################################
    elif region == 'Россия, Башкортостан респ.':
        return ['Россия, Татарстан респ.', 'Россия, Удмуртская респ.', 'Россия, Пермский край',
                'Россия, Оренбургская обл.', 'Россия, Свердловская обл.', 'Россия, Челябинская обл.', ]
    elif region == 'Россия, Марий Эл респ.':
        return ['Россия, Татарстан респ.', 'Россия, Чувашская респ.',
                'Россия, Кировская обл.', 'Россия, Нижегородская обл.', ]
    elif region == 'Россия, Мордовия респ.':
        return ['Россия, Чувашская респ.', 'Россия, Нижегородская обл.', 'Россия, Пензенская обл.',
                'Россия, Рязанская обл.', 'Россия, Ульяновская обл.']
    elif region == 'Россия, Татарстан респ.':
        return ['Россия, Башкортостан респ.', 'Россия, Марий Эл респ.', 'Россия, Удмуртская респ.',
                'Россия, Чувашская респ.', 'Россия, Кировская обл.', 'Россия, Оренбургская обл.',
                'Россия, Самарская обл.', 'Россия, Ульяновская обл.']
    elif region == 'Россия, Удмуртская респ.':
        return ['Россия, Башкортостан респ.', 'Россия, Татарстан респ.', 'Россия, Пермский край',
                'Россия, Кировская обл.']
    elif region == 'Россия, Чувашская респ.':
        return ['Россия, Марий Эл респ.', 'Россия, Мордовия респ.', 'Россия, Татарстан респ.',
                'Россия, Нижегородская обл.', 'Россия, Ульяновская обл.']
    elif region == 'Россия, Пермский край':
        return ['Россия, Башкортостан респ.', 'Россия, Коми респ.', 'Россия, Удмуртская респ.',
                'Россия, Кировская обл.', 'Россия, Свердловская обл.']
    elif region == 'Россия, Кировская обл.':
        return ['Россия, Коми респ.', 'Россия, Марий Эл респ.', 'Россия, Татарстан респ.',
                'Россия, Удмуртская респ.', 'Россия, Пермский край', 'Россия, Архангельская обл.',
                'Россия, Вологодская обл.', 'Россия, Костромская обл.', 'Россия, Нижегородская обл.', ]
    elif region == 'Россия, Нижегородская обл.':
        return ['Россия, Марий Эл респ.', 'Россия, Мордовия респ.', 'Россия, Чувашская респ.',
                'Россия, Владимирская обл.', 'Россия, Ивановская обл.', 'Россия, Кировская обл.',
                'Россия, Костромская обл.', 'Россия, Рязанская обл.']
    elif region == 'Россия, Оренбургская обл.':
        return ['Россия, Башкортостан респ.', 'Россия, Татарстан респ.',
                'Россия, Самарская обл.', 'Россия, Челябинская обл.']
    elif region == 'Россия, Пензенская обл.':
        return ['Россия, Мордовия респ.', 'Россия, Рязанская обл.', 'Россия, Саратовская обл.',
                'Россия, Тамбовская обл.', 'Россия, Ульяновская обл.']
    elif region == 'Россия, Самарская обл.':
        return ['Россия, Татарстан респ.', 'Россия, Оренбургская обл.',
                'Россия, Саратовская обл.', 'Россия, Ульяновская обл.']
    elif region == 'Россия, Саратовская обл.':
        return ['Россия, Волгоградская обл.', 'Россия, Воронежская обл.', 'Россия, Пензенская обл.',
                'Россия, Самарская обл.', 'Россия, Тамбовская обл.', 'Россия, Ульяновская обл.']
    elif region == 'Россия, Ульяновская обл.':
        return ['Россия, Мордовия респ.', 'Россия, Татарстан респ.', 'Россия, Чувашская респ.',
                'Россия, Пензенская обл.', 'Россия, Самарская обл.', 'Россия, Саратовская обл.']
    ########################################## ЮФО ##########################################
    elif region == 'Россия, Адыгея респ.':
        return ['Россия, Краснодарский край']
    elif region == 'Россия, Калмыкия - Хальмг Тангч респ.':
        return ['Россия, Дагестан респ.', 'Россия, Ставропольский край', 'Россия, Астраханская обл.',
                'Россия, Волгоградская обл.', 'Россия, Ростовская обл.']
    elif region == 'Россия, Краснодарский край':
        return ['Россия, Адыгея респ.', 'Россия, Карачаево-Черкесская респ.',
                'Россия, Крым Авт. Респ.', 'Россия, Ставропольский край', 'Россия, Ростовская обл.']
    elif region == 'Россия, Астраханская обл.':
        return ['Россия, Калмыкия - Хальмг Тангч респ.', 'Россия, Волгоградская обл.']
    elif region == 'Россия, Волгоградская обл.':
        return ['Россия, Калмыкия - Хальмг Тангч респ.', 'Россия, Астраханская обл.', 'Россия, Воронежская обл.',
                'Россия, Ростовская обл.', 'Россия, Саратовская обл.']
    elif region == 'Россия, Ростовская обл.':
        return ['Россия, Калмыкия - Хальмг Тангч респ.', 'Россия, Краснодарский край', 'Россия, Ставропольский край',
                'Россия, Волгоградская обл.', 'Россия, Воронежская обл.', ]
    elif region == 'Россия, Крым Авт. Респ.':
        return ['Россия, Краснодарский край']
    ########################################## СКФО ##########################################
    elif region == 'Россия, Дагестан респ.':
        return ['Россия, Калмыкия - Хальмг Тангч респ.', 'Россия, Чеченская респ.', 'Россия, Ставропольский край']
    elif region == 'Россия, Ингушетия респ.':
        return ['Россия, Северная Осетия респ.', 'Россия, Чеченская респ.']
    elif region == 'Россия, Кабардино-Балкарская респ.':
        return ['Россия, Карачаево-Черкесская респ.', 'Россия, Северная Осетия респ.', 'Россия, Ставропольский край']
    elif region == 'Россия, Карачаево-Черкесская респ.':
        return ['Россия, Кабардино-Балкарская респ.', 'Россия, Краснодарский край', 'Россия, Ставропольский край']
    elif region == 'Россия, Северная Осетия респ.':
        return ['Россия, Ингушетия респ.', 'Россия, Кабардино-Балкарская респ.',
                'Россия, Чеченская респ.', 'Россия, Ставропольский край']
    elif region == 'Россия, Чеченская респ.':
        return ['Россия, Дагестан респ.', 'Россия, Ингушетия респ.',
                'Россия, Северная Осетия респ.', 'Россия, Ставропольский край']
    elif region == 'Россия, Ставропольский край':
        return ['Россия, Дагестан респ.', 'Россия, Кабардино-Балкарская респ.', 'Россия, Калмыкия - Хальмг Тангч респ.',
                'Россия, Карачаево-Черкесская респ.', 'Россия, Северная Осетия респ.', 'Россия, Чеченская респ.',
                'Россия, Краснодарский край', 'Россия, Ростовская обл.']
    ########################################## УФО ##########################################


def get_regions_diploma_criteria():
    number_of_caches_to_get_diploma = {
        'Россия, Адыгея респ.': 4,
        'Россия, Башкортостан респ.': 41,
        'Россия, Бурятия респ.': 10,
        'Россия, Алтай респ.': 2,
        'Россия, Дагестан респ.': 26,
        'Россия, Ингушетия респ.': 5,
        'Россия, Кабардино-Балкарская респ.': 9,
        'Россия, Калмыкия - Хальмг Тангч респ.': 3,
        'Россия, Карачаево-Черкесская респ.': 4,
        'Россия, Карелия респ.': 7,
        'Россия, Коми респ.': 10,
        'Россия, Марий Эл респ.': 7,
        'Россия, Мордовия респ.': 9,
        'Россия, Саха (Якутия) респ.': 9,
        'Россия, Северная Осетия респ.': 7,  # Алания
        'Россия, Татарстан респ.': 38,
        'Россия, Тыва (Тува) респ.': 3,
        'Россия, Удмуртская респ.': 15,
        'Россия, Хакасия респ.': 5,
        'Россия, Чеченская респ.': 12,
        'Россия, Чувашская респ.': 13,
        'Россия, Алтайский край': 25,
        'Россия, Краснодарский край': 51,  # Кубань
        'Россия, Красноярский край': 30,  # TODO: taymir, evenikii???
        'Россия, Приморский край': 20,
        'Россия, Ставропольский край': 27,
        'Россия, Хабаровский край': 14,
        'Россия, Амурская обл.': 9,
        'Россия, Архангельская обл.': 13,
        'Россия, Астраханская обл.': 10,
        'Россия, Белгородская обл.': 15,
        'Россия, Брянская обл.': 13,
        'Россия, Владимирская обл.': 15,
        'Россия, Волгоградская обл.': 26,
        'Россия, Вологодская обл.': 12,
        'Россия, Воронежская обл.': 23,
        'Россия, Ивановская обл.': 11,
        'Россия, Иркутская обл.': 27,  # Ust-ordinskii???
        'Россия, Калининградская обл.': 9,
        'Россия, Калужская обл.': 10,
        'Россия, Камчатский край': 3,  # Koryakskii???
        'Россия, Кемеровская обл.': 28,
        'Россия, Кировская обл.': 14,  # Вятка
        'Россия, Костромская обл.': 7,
        'Россия, Курганская обл.': 10,
        'Россия, Курская обл.': 12,
        'Россия, Ленинградская обл.': 62,
        'Россия, Липецкая обл.': 12,
        'Россия, Магаданская обл.': 2,
        'Россия, Московская обл.': 171,
        'Россия, Мурманская обл.': 9,
        'Россия, Нижегородская обл.': 34,
        'Россия, Новгородская обл.': 7,
        'Россия, Новосибирская обл.': 26,
        'Россия, Омская обл.': 20,
        'Россия, Оренбургская обл.': 21,
        'Россия, Орловская обл.': 8,
        'Россия, Пензенская обл.': 14,
        'Россия, Пермский край': 27,  # Komi-permyatskii???
        'Россия, Псковская обл.': 7,
        'Россия, Ростовская обл.': 43,
        'Россия, Рязанская обл.': 12,
        'Россия, Самарская обл.': 32,
        'Россия, Саратовская обл.': 26,
        'Россия, Сахалинская обл.': 5,
        'Россия, Свердловская обл.': 44,
        'Россия, Смоленская обл.': 10,
        'Россия, Тамбовская обл.': 11,
        'Россия, Тверская обл.': 14,
        'Россия, Томская обл.': 10,
        'Россия, Тульская обл.': 16,
        'Россия, Тюменская обл.': 33,
        'Россия, Ульяновская обл.': 13,
        'Россия, Челябинская обл.': 35,
        'Россия, Забайкальский край': 12,  # angiro-buryatskii???
        'Россия, Ярославская обл.': 13,
        'Россия, Еврейская авт. обл.': 2,
        'Россия, Крым Авт. Респ.': 25,
        'Россия, Чукотский авт. окр.': 2,
    }
    return number_of_caches_to_get_diploma
